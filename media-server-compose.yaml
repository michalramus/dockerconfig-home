version: "3.9"
services:

  qBittorrent:
    image: linuxserver/qbittorrent:5.1.0
    container_name: qBittorrent
    ports:
      - '6881:6881'
      - '6881:6881/udp'
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022
      - TZ=Europe/Warsaw
      - WEBUI_PORT=80
      - DOCKER_MODS=ghcr.io/vuetorrent/vuetorrent-lsio-mod:sha-0c042a3
    volumes:
      - /docker/qbittorrent:/config
      - /docker/storage/jellyfin:/jellyfin
    networks:
      nginx-bridge:
    restart: unless-stopped

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.26.2
    networks:
      nginx-bridge:
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /docker/radarr:/config
      - /docker/storage/jellyfin:/jellyfin
    restart: "unless-stopped"

  sonarr:
    image: linuxserver/sonarr:4.0.15
    container_name: sonarr
    networks:
      nginx-bridge:
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /docker/sonarr:/config
      - /docker/storage/jellyfin:/jellyfin
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:1.37.0
    networks:               
      nginx-bridge:           
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /docker/powlarr:/config
    restart: unless-stopped

  # recommendarr: 
  #   container_name: recommendarr
  #   image: tannermiddleton/recommendarr:v1.4.4
  #   networks:
  #     nginx-bridge:
  #   environment:
  #     - NODE_ENV=production
  #     - DOCKER_ENV=true
  #     - PORT=80
  #     - PUBLIC_URL=https://recommendarr.ramus.ovh
  #   volumes:
  #     - /docker/recommendarr:/app/server/data
  #   restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:2.7.0
    container_name: jellyseerr
    networks:
      nginx-bridge:
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
    volumes:
      - /docker/jellyseerr:/app/config
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin:2025063005
    container_name: jellyfin
    user: 1000:1000
    # network_mode: 'host'
    volumes:
      - /docker/jellyfin/config:/config
      - /docker/jellyfin/cache:/cache
      - /docker/storage/jellyfin:/media
    # Optional - extra fonts to be used during transcoding with subtitle burn-in
    # - type: bind
    #   source: /path/to/fonts
    #   target: /usr/local/share/fonts/custom
    #   read_only: true
    networks:
      nginx-bridge:
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    # extra_hosts:
    #   - 'host.docker.internal:host-gateway'
    restart: 'unless-stopped'

  flaresolverr:
    image: flaresolverr/flaresolverr:v3.3.25
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Warsaw
    networks:
      nginx-bridge:
    restart: unless-stopped
  
networks:
  nginx-bridge:
    name: nginx-bridge
    external: true
